;; don't reload the shell buffers at this juncture
(setq sw-restore-shell-buffers-flag nil)

(tool-bar-mode -1)

(setq custom-file "~swain/.elisp/emacs-tongebirge-custom.el")

(when window-system
  (setq default-frame-alist '((background-color . "#040000")
                              (foreground-color . "goldenrod")
                              (cursor-color . "green"))))


;; load a newer version of org-mode
(setq load-path (cons "~/org/org-7.8.03/lisp" load-path))
(setq load-path (cons "~/org/org-7.8.03/contrib/lisp" load-path))

;; load a newer version of python-mode
;; (add-to-list 'load-path "~/toolbox/external_packages/python-mode.el-6.0.4/") 
;; (setq py-install-directory "~/toolbox/external_packages/python-mode.el-6.0.4/")
;; (require 'python-mode)


(load-file "~swain/.elisp/swainlib.el")
(load-file "~swain/.elisp/ssc.el")
(load-file "~swain/.elisp/compilation-buffer-extras.el")
(load-file "~swain/.elisp/osx.el")


;; Gonna try living with an iBuffer that no longer removes all other
;; windows.
(defun sw-list ()
  "switch to Ibuffer; this function should be bound to F9"
  (interactive)
  (setq buffer (get-buffer "*Ibuffer*"))
  (if (bufferp buffer)
      (progn 
        (switch-to-buffer buffer)
        (ibuffer-update nil))
    (ibuffer))
  ;;(delete-other-windows)
  )

;; normally M-` brings up the File menu in the minibuffer. Override
;; that with other-frame so Emacs behaves like other Cocoa apps: M-`
;; rotates through app windows.
(global-set-key "\M-`" 'other-frame)

(put 'upcase-region 'disabled nil)

;; flush terminal output faster
(global-set-key [f10] 'comint-delete-output)
(put 'set-goal-column 'disabled nil)
(put 'scroll-left 'disabled nil)


(setq org-agenda-files (list "~/.elisp/emacs.org"
                             "~/notebooks/developer-notes/swain/todo-lists/todo.org"
                             ))

;; attempt to get Emacs's "M-x compile" to work with the newly merged
;; in "unification" branch, 2/23/2012
(setenv "PYTHONPATH" (shell-command-to-string "source ~swain/.bashrc; echo -n $PYTHONPATH"))
